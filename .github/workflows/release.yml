name: release-please

on:
  push:
    branches:
      - main

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      release-created: ${{ steps.release.outputs['release_created'] }}
      tag-name: ${{ steps.release.outputs['tag_name'] }}
      version: ${{ steps.release.outputs['version'] }}
      pr: ${{ steps.release.outputs['pr'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.release_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  container:
    needs:
      - release-please
    if: needs.release-please.outputs.release-created
    uses: ./.github/workflows/container.yml
    with:
      image-name: "fluencelabs/fluence-network-exporter"
      ref: ${{ needs.release-please.outputs.tag-name }}
      release: "true"

  deploy:
    needs:
      - release-please
      - container
    if: needs.release-please.outputs.release-created
    strategy:
      fail-fast: false
      matrix:
        env:
          - stage
          - testnet
          - mainnet
    uses: ./.github/workflows/deploy.yml
    with:
      ref: ${{ needs.release-please.outputs.tag-name }}
      env: ${{ matrix.env }}
      image: fluencelabs/fluence-network-exporter:${{ needs.release-please.outputs.version }}
