name: Publish container image

on:
  workflow_call:
    inputs:
      ref:
        description: "git ref to checkout to"
        type: string
        default: "main"
      release:
        type: string
        default: "false"
      image-name:
        description: "image name"
        type: string
        required: true
    outputs:
      image:
        value: ${{ jobs.publish.outputs.image }}

jobs:
  publish:
    name: "Publish image"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    outputs:
      image: "${{ inputs.image-name }}@${{ steps.docker.outputs.digest }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/fluence-network-exporter
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_HUB_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_HUB_PASSWORD ;
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Construct artifacts names
        id: artifacts
        env:
          release: ${{ inputs.release }}
        run: |
          if [[ ${release} == "false" ]]; then
            echo "image=docker.fluence.dev/fluence-network-exporter:${{ steps.version.outputs.id }}" >> "$GITHUB_OUTPUT"
            echo "latest=docker.fluence.dev/fluence-network-exporter:${{ steps.version.outputs.branch }}" >> "$GITHUB_OUTPUT"
          else
            version="$(jq -r '.[]' .github/release-please/manifest.json)"
            echo "image=fluencelabs/fluence-network-exporter:${version}" >> "$GITHUB_OUTPUT"
            echo "latest=fluencelabs/fluence-network-exporter:latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build and push container image
        id: docker
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.artifacts.outputs.image }}
            ${{ steps.artifacts.outputs.latest }}
          labels: |
            branch=${{ steps.version.outputs.branch }}
            sha=${{ steps.version.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print results to check summary
        if: always()
        run: |
          cat <<'SNAPSHOT' >> $GITHUB_STEP_SUMMARY
          ## fluence-network-exporter
          digest: `${{ steps.docker.outputs.digest }}`
          ```
          ${{ steps.artifacts.outputs.image }}
          ${{ steps.artifacts.outputs.latest }}
          ```

          ### Access to Fluence docker registry
          ```
          vault read kv/basicauth/dev
          docker login docker.fluence.dev
          ```
          SNAPSHOT
